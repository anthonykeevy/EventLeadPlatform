<story-context id="bmad/bmm/workflows/4-implementation/story-context/template" v="1.0">
  <metadata>
    <epicId>1</epicId>
    <storyId>10</storyId>
    <title>Enhanced ABR Search Implementation</title>
    <status>Approved</status>
    <generatedAt>2025-10-17</generatedAt>
    <generator>BMAD Story Context Workflow</generator>
    <sourceStoryPath>docs/stories/story-1.10.md</sourceStoryPath>
  </metadata>

  <acceptance_criteria>
    <ac id="AC-1.10.1" priority="critical">
      <statement>Smart search auto-detects query type (ABN, ACN, or company name)</statement>
      <validation>
        <method>Unit Test</method>
        <success_condition>11-digit number detected as ABN; 9-digit as ACN; text as company name; mixed formats handled</success_condition>
      </validation>
    </ac>
    <ac id="AC-1.10.2" priority="high">
      <statement>ABR API integration returns accurate results</statement>
      <validation>
        <method>Integration Test</method>
        <success_condition>Search by ABN returns company details (name, ABN, ACN, address); search by name returns top 10 matches</success_condition>
      </validation>
    </ac>
    <ac id="AC-1.10.3" priority="high">
      <statement>Search results cached for 24 hours</statement>
      <validation>
        <method>Integration Test</method>
        <success_condition>Same query within 24 hours returns cached result (no API call); cache expires after 24 hours</success_condition>
      </validation>
    </ac>
    <ac id="AC-1.10.4" priority="critical">
      <statement>Search endpoint responds within 2 seconds</statement>
      <validation>
        <method>Performance Test</method>
        <success_condition>95th percentile response time <2s; cached queries <100ms; timeout after 5s</success_condition>
      </validation>
    </ac>
    <ac id="AC-1.10.5" priority="high">
      <statement>Search results include company name, ABN, ACN, address</statement>
      <validation>
        <method>Integration Test</method>
        <success_condition>Each result contains companyName, abn, acn (if available), businessAddress with state/postcode</success_condition>
      </validation>
    </ac>
    <ac id="AC-1.10.6" priority="medium">
      <statement>Graceful handling of ABR API failures</statement>
      <validation>
        <method>Integration Test</method>
        <success_condition>API timeout/error allows manual entry fallback; user-friendly error message; logged to monitoring</success_condition>
      </validation>
    </ac>
    <ac id="AC-1.10.7" priority="high">
      <statement>ABN/ACN validation rules enforced</statement>
      <validation>
        <method>Unit Test</method>
        <success_condition>ABN validated with checksum algorithm; ACN format validated; invalid numbers rejected with clear error</success_condition>
      </validation>
    </ac>
    <ac id="AC-1.10.8" priority="medium">
      <statement>Search queries logged for analytics</statement>
      <validation>
        <method>Database Query</method>
        <success_condition>All searches logged with query, result count, response time, cache hit/miss</success_condition>
      </validation>
    </ac>
  </acceptance_criteria>

  <dependencies>
    <dependency type="story" status="completed">
      <id>Story 0.1</id>
      <description>Database Models - Provides Company table</description>
    </dependency>
    <dependency type="story" status="ready">
      <id>Story 1.13</id>
      <description>Configuration Service - Provides ABR API credentials and cache TTL configuration</description>
    </dependency>
    <dependency type="external" status="ready">
      <id>ABR Web Services</id>
      <description>Australian Business Register API for business name lookups</description>
    </dependency>
  </dependencies>

  <notes>
    <note type="integration">
      ABR API requires GUID authentication. Obtain GUID from ABR website (free registration). API endpoint: https://abr.business.gov.au/abrxmlsearch/AbrXmlSearch.asmx
    </note>
    <note type="performance">
      Caching is critical! ABR API can be slow (1-3 seconds). Cache results in Redis with 24-hour TTL. Cache key: `abr:search:{normalized_query}`. Normalize queries (remove spaces, uppercase) for better cache hit rate.
    </note>
    <note type="ux">
      Smart auto-detection significantly improves UX. Users can paste ABN with spaces (12 345 678 901) or without (12345678901) - system normalizes. Success rate increases from 20% (manual entry) to 90% (ABR search).
    </note>
    <note type="implementation">
      Use httpx for async HTTP requests. Implement timeout (5 seconds). Use exponential backoff for retries (3 attempts). Parse XML response from ABR API. Extract: LegalName, Abn, Asic, BusinessAddress.
    </note>
    <note type="security">
      Never expose ABR GUID to frontend. Store in environment variable. Log failed requests but not sensitive data. Rate limit search endpoint (10 requests/minute per user) to prevent abuse.
    </note>
  </notes>
</story-context>

