<?xml version="1.0" encoding="UTF-8"?>
<story-context>
  <metadata>
    <epic-id>1</epic-id>
    <story-id>12</story-id>
    <story-title>International Foundation and Web Properties</story-title>
    <story-status>Draft</story-status>
    <created-date>2025-10-13</created-date>
    <context-version>1.0</context-version>
  </metadata>

  <user-story>
    <as-a>EventLead Platform system</as-a>
    <i-want>to establish an international foundation with country-specific validation rules and web properties</i-want>
    <so-that>the platform can support global expansion with flexible, country-specific configurations</so-that>
  </user-story>

  <acceptance-criteria>
    <criterion id="AC-12.1">System implements country and language domain models</criterion>
    <criterion id="AC-12.2">System provides country-specific validation rules (phone, postal code, tax ID)</criterion>
    <criterion id="AC-12.3">System implements web properties for UI flexibility (colors, sort order, display names)</criterion>
    <criterion id="AC-12.4">System provides validation rule engine for different countries</criterion>
    <criterion id="AC-12.5">System implements country-specific phone number validation</criterion>
    <criterion id="AC-12.6">System provides postal code validation by country</criterion>
    <criterion id="AC-12.7">System implements tax ID validation by country</criterion>
    <criterion id="AC-12.8">System provides international expansion service for new countries</criterion>
    <criterion id="AC-12.9">System implements country-specific UI theming and branding</criterion>
    <criterion id="AC-12.10">System provides country-specific configuration management</criterion>
  </acceptance-criteria>

  <artifacts>
    <docs>
      <doc path="docs/tech-spec-epic-1.md" title="Epic 1 Technical Specification" section="AC-12: International Foundation">
        <snippet>AC-12.1: System implements country and language domain models
AC-12.2: System provides country-specific validation rules (phone, postal code, tax ID)
AC-12.3: System implements web properties for UI flexibility (colors, sort order, display names)
AC-12.4: System provides validation rule engine for different countries
AC-12.5: System implements country-specific phone number validation</snippet>
      </doc>
      <doc path="docs/tech-spec-epic-1.md" title="Epic 1 Technical Specification" section="Country & Language Domain Schema">
        <snippet>CREATE TABLE [Country] (
    CountryID BIGINT IDENTITY(1,1) NOT NULL,    -- Primary key
    CountryCode NVARCHAR(3) NOT NULL,           -- ISO 3166-1 alpha-3
    CountryName NVARCHAR(100) NOT NULL,         -- Country name
    DefaultLanguageCode NVARCHAR(5) NOT NULL,   -- Default language
    IsActive BIT NOT NULL DEFAULT 1,            -- Country status
    CreatedDate DATETIME2 NOT NULL DEFAULT GETUTCDATE(),
    CreatedBy BIGINT NULL,
    UpdatedDate DATETIME2 NOT NULL DEFAULT GETUTCDATE(),
    UpdatedBy BIGINT NULL,
    IsDeleted BIT NOT NULL DEFAULT 0,
    DeletedDate DATETIME2 NULL,
    DeletedBy BIGINT NULL,
    
    CONSTRAINT PK_Country PRIMARY KEY (CountryID),
    CONSTRAINT UQ_Country_CountryCode UNIQUE (CountryCode),
    CONSTRAINT FK_Country_CreatedBy FOREIGN KEY (CreatedBy) REFERENCES [User](UserID),
    CONSTRAINT FK_Country_UpdatedBy FOREIGN KEY (UpdatedBy) REFERENCES [User](UserID),
    CONSTRAINT FK_Country_DeletedBy FOREIGN KEY (DeletedBy) REFERENCES [User](UserID)
);</snippet>
      </doc>
    </docs>

    <code>
      <file path="backend/modules/countries/validation_engine.py" kind="file" symbol="validation_engine" lines="0" reason="Validation engine - needs country-specific validation rules"/>
      <file path="backend/modules/countries/expansion_service.py" kind="file" symbol="expansion_service" lines="0" reason="International expansion service - needs new country setup workflow"/>
      <file path="frontend/src/features/validation/components/CountryValidation.tsx" kind="file" symbol="country_validation" lines="0" reason="Country validation component - needs country-specific validation"/>
      <file path="frontend/src/features/validation/components/PhoneInput.tsx" kind="file" symbol="phone_input" lines="0" reason="Phone input component - needs country-specific phone validation"/>
    </code>

    <dependencies>
      <ecosystem name="python">
        <package name="fastapi" version="0.115.7" purpose="Web framework for international foundation endpoints"/>
        <package name="sqlalchemy" version="2.0.40" purpose="ORM for country and language data operations"/>
        <package name="pydantic" version="2.10.6" purpose="Request/response validation for country-specific rules"/>
      </ecosystem>
      <ecosystem name="node">
        <package name="react" version="18.2.0" purpose="Frontend UI framework"/>
        <package name="react-hook-form" version="7.48.2" purpose="Form handling for country-specific validation"/>
        <package name="axios" version="1.6.2" purpose="HTTP client for international foundation API calls"/>
      </ecosystem>
    </dependencies>
  </artifacts>

  <interfaces>
    <interface name="validation_rule_engine" kind="Service" signature="def validate_by_country(field: str, value: str, country_code: str) -> dict" path="backend/modules/countries/validation_engine.py">
      <description>Validation rule engine for country-specific validation</description>
    </interface>
    <interface name="international_expansion_service" kind="Service" signature="def setup_new_country(country_code: str, config: dict)" path="backend/modules/countries/expansion_service.py">
      <description>International expansion service for new country setup</description>
    </interface>
    <interface name="country_validation_component" kind="React Component" signature="CountryValidation" path="frontend/src/features/validation/components/CountryValidation.tsx">
      <description>Country validation component with dynamic validation rules</description>
    </interface>
    <interface name="phone_input_component" kind="React Component" signature="PhoneInput" path="frontend/src/features/validation/components/PhoneInput.tsx">
      <description>Phone input component with country-specific validation</description>
    </interface>
  </interfaces>

  <constraints>
    <constraint type="architecture">International Foundation: Country and language domain models with web properties</constraint>
    <constraint type="validation">Validation Rule Engine: Flexible, country-specific validation rules</constraint>
    <constraint type="user-experience">Web Properties: UI flexibility with country-specific theming and branding</constraint>
    <constraint type="architecture">International Expansion: Service for adding new countries and configurations</constraint>
    <constraint type="performance">Efficient Validation: Efficient validation with caching and optimization</constraint>
    <constraint type="testing">Unit Tests: 80%+ coverage for international foundation module using pytest</constraint>
    <constraint type="testing">Integration Tests: Country-specific validation using TestClient</constraint>
    <constraint type="testing">E2E Tests: Browser country-specific functionality using Playwright</constraint>
  </constraints>

  <tests>
    <standards>
      Testing follows pytest framework for backend unit tests, React Testing Library for frontend component tests, and Playwright for E2E testing.
      Unit tests require 80%+ coverage for international foundation module. Integration tests cover country-specific validation using FastAPI TestClient.
      E2E tests use Playwright for browser country-specific functionality and configuration management.
    </standards>
    <locations>
      <location>backend/tests/</location>
      <location>frontend/src/**/*.test.tsx</location>
      <location>tests/e2e/</location>
    </locations>
    <ideas>
      <test ac-id="AC-12.1" type="unit" description="Test country and language domain models implementation"/>
      <test ac-id="AC-12.2" type="unit" description="Test country-specific validation rules (phone, postal code, tax ID)"/>
      <test ac-id="AC-12.3" type="unit" description="Test web properties for UI flexibility"/>
      <test ac-id="AC-12.4" type="unit" description="Test validation rule engine for different countries"/>
      <test ac-id="AC-12.5" type="unit" description="Test country-specific phone number validation"/>
      <test ac-id="AC-12.6" type="unit" description="Test postal code validation by country"/>
      <test ac-id="AC-12.7" type="unit" description="Test tax ID validation by country"/>
      <test ac-id="AC-12.8" type="integration" description="Test international expansion service for new countries"/>
      <test ac-id="AC-12.9" type="e2e" description="Test country-specific UI theming and branding"/>
      <test ac-id="AC-12.10" type="unit" description="Test country-specific configuration management"/>
    </ideas>
  </tests>
</story-context>
