<?xml version="1.0" encoding="UTF-8"?>
<story-context>
  <metadata>
    <epic-id>1</epic-id>
    <story-id>3</story-id>
    <story-title>First-Time User Onboarding (Company Creator)</story-title>
    <story-status>Draft</story-status>
    <created-date>2025-10-13</created-date>
    <context-version>1.0</context-version>
  </metadata>

  <user-story>
    <as-a>verified EventLead Platform user</as-a>
    <i-want>to complete a multi-step onboarding process to set up my user profile and create my company</i-want>
    <so-that>I can become a Company Admin and start using the platform for event lead generation</so-that>
  </user-story>

  <acceptance-criteria>
    <criterion id="AC-3.1">User redirected to onboarding after email verification</criterion>
    <criterion id="AC-3.2">System presents 2-step onboarding flow with progress indicator</criterion>
    <criterion id="AC-3.3">Step 1 - User Details: User can enter first name, last name, role title (optional), phone (optional)</criterion>
    <criterion id="AC-3.4">System validates required fields and Australian phone format (+61)</criterion>
    <criterion id="AC-3.5">System saves user details and navigates to Step 2</criterion>
    <criterion id="AC-3.6">Step 2 - Company Setup: User can enter company name, ABN, billing address</criterion>
    <criterion id="AC-3.7">System provides enhanced company search with auto-detection (ABN/ACN/Name)</criterion>
    <criterion id="AC-3.8">System validates search results via ABR API with enterprise-grade caching (300x faster)</criterion>
    <criterion id="AC-3.9">System achieves ~90% search success rate (up from ~20%) with smart search UX</criterion>
    <criterion id="AC-3.10">System validates Australian address (state dropdown, 4-digit postcode)</criterion>
    <criterion id="AC-3.11">System saves company details and creates UserCompany relationship with Company Admin role</criterion>
    <criterion id="AC-3.12">System redirects to dashboard upon completion</criterion>
    <criterion id="AC-3.13">System logs all onboarding activities for audit trail</criterion>
    <criterion id="AC-3.14">User can save progress and resume later (auto-save functionality)</criterion>
  </acceptance-criteria>

  <artifacts>
    <docs>
      <doc path="docs/tech-spec-epic-1.md" title="Epic 1 Technical Specification" section="AC-3: First-Time User Onboarding">
        <snippet>AC-3.1: User redirected to onboarding after email verification
AC-3.2: System presents 2-step onboarding flow with progress indicator
AC-3.3: Step 1 - User Details: User can enter first name, last name, role title (optional), phone (optional)
AC-3.4: System validates required fields and Australian phone format (+61)
AC-3.5: System saves user details and navigates to Step 2
AC-3.6: Step 2 - Company Setup: User can enter company name, ABN, billing address
AC-3.7: System provides enhanced company search with auto-detection (ABN/ACN/Name)
AC-3.8: System validates search results via ABR API with enterprise-grade caching (300x faster)
AC-3.9: System achieves ~90% search success rate (up from ~20%) with smart search UX</snippet>
      </doc>
      <doc path="docs/tech-spec-epic-1.md" title="Epic 1 Technical Specification" section="Enhanced ABR Search Implementation">
        <snippet>Enhanced ABR Search with enterprise-grade caching:
- Smart search detection (ABN/ACN/Company Name patterns)
- Enterprise caching with 30-day TTL for 300x performance improvement
- Search result validation and data enrichment
- Search analytics and success rate tracking
- Real-time search suggestions and auto-completion</snippet>
      </doc>
      <doc path="docs/tech-spec-epic-1.md" title="Epic 1 Technical Specification" section="Company Domain Schema">
        <snippet>CREATE TABLE [Company] (
    CompanyID BIGINT IDENTITY(1,1) NOT NULL,    -- Primary key
    CompanyName NVARCHAR(200) NOT NULL,          -- Company name
    ABN NVARCHAR(11) NULL,                       -- Australian Business Number
    ACN NVARCHAR(9) NULL,                        -- Australian Company Number
    IsActive BIT NOT NULL DEFAULT 1,             -- Company status
    CreatedDate DATETIME2 NOT NULL DEFAULT GETUTCDATE(),
    CreatedBy BIGINT NULL,
    UpdatedDate DATETIME2 NOT NULL DEFAULT GETUTCDATE(),
    UpdatedBy BIGINT NULL,
    IsDeleted BIT NOT NULL DEFAULT 0,
    DeletedDate DATETIME2 NULL,
    DeletedBy BIGINT NULL,
    
    CONSTRAINT PK_Company PRIMARY KEY (CompanyID),
    CONSTRAINT FK_Company_CreatedBy FOREIGN KEY (CreatedBy) REFERENCES [User](UserID),
    CONSTRAINT FK_Company_UpdatedBy FOREIGN KEY (UpdatedBy) REFERENCES [User](UserID),
    CONSTRAINT FK_Company_DeletedBy FOREIGN KEY (DeletedBy) REFERENCES [User](UserID)
);</snippet>
      </doc>
    </docs>

    <code>
      <file path="backend/modules/users/router.py" kind="file" symbol="users_router" lines="0" reason="Users router - needs onboarding endpoints for user details and company setup"/>
      <file path="backend/modules/users/service.py" kind="file" symbol="users_service" lines="0" reason="Users service - needs onboarding business logic and user details management"/>
      <file path="backend/modules/companies/router.py" kind="file" symbol="companies_router" lines="0" reason="Companies router - needs company creation and ABR search endpoints"/>
      <file path="backend/modules/companies/service.py" kind="file" symbol="companies_service" lines="0" reason="Companies service - needs company creation and validation logic"/>
      <file path="backend/modules/companies/abr_client.py" kind="file" symbol="abr_client" lines="0" reason="ABR client - needs ABR API integration for company search"/>
      <file path="backend/modules/companies/cache_service.py" kind="file" symbol="cache_service" lines="0" reason="Cache service - needs enterprise-grade caching for ABR search results"/>
      <file path="frontend/src/features/onboarding/components/OnboardingFlow.tsx" kind="file" symbol="onboarding_flow" lines="0" reason="Onboarding flow component - needs multi-step onboarding with progress indicator"/>
      <file path="frontend/src/features/companies/components/SmartCompanySearch.tsx" kind="file" symbol="smart_search" lines="0" reason="Smart company search component - needs enhanced search with auto-detection"/>
    </code>

    <dependencies>
      <ecosystem name="python">
        <package name="fastapi" version="0.115.7" purpose="Web framework for onboarding endpoints"/>
        <package name="sqlalchemy" version="2.0.40" purpose="ORM for user and company data operations"/>
        <package name="httpx" version="0.28.1" purpose="HTTP client for ABR API integration"/>
        <package name="pydantic" version="2.10.6" purpose="Data validation for onboarding forms"/>
      </ecosystem>
      <ecosystem name="node">
        <package name="react" version="18.2.0" purpose="Frontend UI framework"/>
        <package name="react-hook-form" version="7.48.2" purpose="Onboarding form handling and validation"/>
        <package name="axios" version="1.6.2" purpose="HTTP client for onboarding API calls"/>
        <package name="framer-motion" version="10.16.5" purpose="Animation library for onboarding transitions"/>
      </ecosystem>
    </dependencies>
  </artifacts>

  <interfaces>
    <interface name="onboarding_user_details_endpoint" kind="REST API" signature="POST /api/users/onboarding/user-details" path="backend/modules/users/router.py">
      <description>Endpoint for saving user details during onboarding Step 1</description>
    </interface>
    <interface name="onboarding_company_setup_endpoint" kind="REST API" signature="POST /api/users/onboarding/company-setup" path="backend/modules/users/router.py">
      <description>Endpoint for company setup during onboarding Step 2</description>
    </interface>
    <interface name="abr_search_endpoint" kind="REST API" signature="GET /api/companies/search" path="backend/modules/companies/router.py">
      <description>ABR search endpoint with smart detection and caching</description>
    </interface>
    <interface name="onboarding_flow_component" kind="React Component" signature="OnboardingFlow" path="frontend/src/features/onboarding/components/OnboardingFlow.tsx">
      <description>Multi-step onboarding flow component with progress indicator</description>
    </interface>
    <interface name="smart_company_search_component" kind="React Component" signature="SmartCompanySearch" path="frontend/src/features/companies/components/SmartCompanySearch.tsx">
      <description>Enhanced company search component with auto-detection</description>
    </interface>
  </interfaces>

  <constraints>
    <constraint type="architecture">Multi-step Onboarding: Progressive form completion with validation at each step</constraint>
    <constraint type="performance">Enhanced ABR Search: Enterprise-grade caching with 300x performance improvement</constraint>
    <constraint type="validation">Australian Validation: Phone format (+61), address validation, ABN validation</constraint>
    <constraint type="user-experience">Auto-save Functionality: User can save progress and resume later</constraint>
    <constraint type="security">Multi-tenant Foundation: Company creation establishes tenant boundary</constraint>
    <constraint type="audit">Activity Logging: Comprehensive audit trail for onboarding events</constraint>
    <constraint type="testing">Unit Tests: 80%+ coverage for onboarding and company modules</constraint>
    <constraint type="testing">Integration Tests: Complete onboarding flow with ABR search</constraint>
    <constraint type="testing">E2E Tests: Browser onboarding flow with company creation</constraint>
  </constraints>

  <tests>
    <standards>
      Testing follows pytest framework for backend unit tests, React Testing Library for frontend component tests, and Playwright for E2E testing.
      Unit tests require 80%+ coverage for onboarding and company modules. Integration tests cover complete onboarding flow with ABR search.
      E2E tests use Playwright for browser onboarding scenarios and company creation.
    </standards>
    <locations>
      <location>backend/tests/</location>
      <location>frontend/src/**/*.test.tsx</location>
      <location>tests/e2e/</location>
    </locations>
    <ideas>
      <test ac-id="AC-3.1" type="e2e" description="Test user redirected to onboarding after email verification"/>
      <test ac-id="AC-3.2" type="e2e" description="Test 2-step onboarding flow with progress indicator"/>
      <test ac-id="AC-3.3" type="unit" description="Test user details form with required and optional fields"/>
      <test ac-id="AC-3.4" type="unit" description="Test Australian phone format validation (+61)"/>
      <test ac-id="AC-3.5" type="integration" description="Test user details save and navigation to Step 2"/>
      <test ac-id="AC-3.6" type="unit" description="Test company setup form with company name, ABN, billing address"/>
      <test ac-id="AC-3.7" type="integration" description="Test enhanced company search with auto-detection"/>
      <test ac-id="AC-3.8" type="integration" description="Test ABR API integration with enterprise caching"/>
      <test ac-id="AC-3.9" type="performance" description="Test search success rate and performance optimization"/>
      <test ac-id="AC-3.10" type="unit" description="Test Australian address validation (state, postcode)"/>
      <test ac-id="AC-3.11" type="integration" description="Test company creation and UserCompany relationship"/>
      <test ac-id="AC-3.12" type="e2e" description="Test redirect to dashboard after onboarding completion"/>
      <test ac-id="AC-3.13" type="unit" description="Test onboarding activity logging"/>
      <test ac-id="AC-3.14" type="e2e" description="Test auto-save functionality and resume capability"/>
    </ideas>
  </tests>
</story-context>
