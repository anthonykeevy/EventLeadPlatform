<?xml version="1.0" encoding="UTF-8"?>
<story-context>
  <metadata>
    <epic-id>1</epic-id>
    <story-id>5</story-id>
    <story-title>Team Invitation Management</story-title>
    <story-status>Draft</story-status>
    <created-date>2025-10-13</created-date>
    <context-version>1.0</context-version>
  </metadata>

  <user-story>
    <as-a>Company Admin</as-a>
    <i-want>to invite team members to join my company with specific roles</i-want>
    <so-that>I can build a collaborative team for event lead generation and management</so-that>
  </user-story>

  <acceptance-criteria>
    <criterion id="AC-5.1">Company Admin can create invitations for new team members</criterion>
    <criterion id="AC-5.2">System validates invitation email format and prevents duplicate invitations</criterion>
    <criterion id="AC-5.3">System generates secure invitation token with 7-day expiration</criterion>
    <criterion id="AC-5.4">System sends invitation email with secure token link</criterion>
    <criterion id="AC-5.5">Company Admin can assign specific roles (Company User) to invitations</criterion>
    <criterion id="AC-5.6">System displays pending invitations with status and expiration</criterion>
    <criterion id="AC-5.7">Company Admin can resend invitations to pending users</criterion>
    <criterion id="AC-5.8">Company Admin can cancel pending invitations</criterion>
    <criterion id="AC-5.9">System logs all invitation activities for audit trail</criterion>
    <criterion id="AC-5.10">System enforces invitation limits (configurable per company)</criterion>
    <criterion id="AC-5.11">Invitation emails include company branding and context</criterion>
  </acceptance-criteria>

  <artifacts>
    <docs>
      <doc path="docs/tech-spec-epic-1.md" title="Epic 1 Technical Specification" section="AC-5: Invitation Management">
        <snippet>AC-5.1: Company Admin can create invitations for new team members
AC-5.2: System validates invitation email format and prevents duplicate invitations
AC-5.3: System generates secure invitation token with 7-day expiration
AC-5.4: System sends invitation email with secure token link
AC-5.5: Company Admin can assign specific roles (Company User) to invitations
AC-5.6: System displays pending invitations with status and expiration
AC-5.7: Company Admin can resend invitations to pending users
AC-5.8: Company Admin can cancel pending invitations
AC-5.9: System logs all invitation activities for audit trail
AC-5.10: System enforces invitation limits (configurable per company)
AC-5.11: Invitation emails include company branding and context</snippet>
      </doc>
      <doc path="docs/tech-spec-epic-1.md" title="Epic 1 Technical Specification" section="User Domain Schema">
        <snippet>CREATE TABLE [Invitation] (
    InvitationID BIGINT IDENTITY(1,1) NOT NULL,    -- Primary key
    CompanyID BIGINT NOT NULL,                     -- Company being invited to
    InvitedByUserID BIGINT NOT NULL,               -- User who sent invitation
    InvitedEmail NVARCHAR(255) NOT NULL,           -- Email address of invitee
    InvitationToken NVARCHAR(255) NOT NULL,        -- Secure invitation token
    RoleCode NVARCHAR(50) NOT NULL,                -- Role assigned (company_user)
    StatusCode NVARCHAR(50) NOT NULL,              -- pending, accepted, expired, cancelled
    ExpiresAt DATETIME2 NOT NULL,                  -- Token expiration (7 days)
    CreatedDate DATETIME2 NOT NULL DEFAULT GETUTCDATE(),
    CreatedBy BIGINT NULL,
    UpdatedDate DATETIME2 NOT NULL DEFAULT GETUTCDATE(),
    UpdatedBy BIGINT NULL,
    IsDeleted BIT NOT NULL DEFAULT 0,
    DeletedDate DATETIME2 NULL,
    DeletedBy BIGINT NULL,
    
    CONSTRAINT PK_Invitation PRIMARY KEY (InvitationID),
    CONSTRAINT FK_Invitation_Company FOREIGN KEY (CompanyID) REFERENCES [Company](CompanyID),
    CONSTRAINT FK_Invitation_InvitedBy FOREIGN KEY (InvitedByUserID) REFERENCES [User](UserID),
    CONSTRAINT FK_Invitation_CreatedBy FOREIGN KEY (CreatedBy) REFERENCES [User](UserID),
    CONSTRAINT FK_Invitation_UpdatedBy FOREIGN KEY (UpdatedBy) REFERENCES [User](UserID),
    CONSTRAINT FK_Invitation_DeletedBy FOREIGN KEY (DeletedBy) REFERENCES [User](UserID)
);</snippet>
      </doc>
    </docs>

    <code>
      <file path="backend/modules/team/router.py" kind="file" symbol="team_router" lines="0" reason="Team router - needs invitation management endpoints"/>
      <file path="backend/modules/team/service.py" kind="file" symbol="team_service" lines="0" reason="Team service - needs invitation business logic and role management"/>
      <file path="backend/templates/emails/team_invitation_email.html" kind="file" symbol="invitation_email_template" lines="0" reason="Team invitation email template - needs HTML template with company branding"/>
      <file path="frontend/src/features/team/components/TeamManagement.tsx" kind="file" symbol="team_management" lines="0" reason="Team management component - needs invitation creation and management interface"/>
      <file path="frontend/src/features/team/components/InvitationList.tsx" kind="file" symbol="invitation_list" lines="0" reason="Invitation list component - needs pending invitations display with status"/>
      <file path="frontend/src/features/team/components/InviteUserModal.tsx" kind="file" symbol="invite_user_modal" lines="0" reason="Invite user modal component - needs invitation creation form with role selection"/>
    </code>

    <dependencies>
      <ecosystem name="python">
        <package name="fastapi" version="0.115.7" purpose="Web framework for team invitation endpoints"/>
        <package name="sqlalchemy" version="2.0.40" purpose="ORM for invitation data operations"/>
        <package name="azure-communication-email" version="1.0.1b1" purpose="Azure email service for invitation emails"/>
        <package name="pydantic" version="2.10.6" purpose="Request/response validation for invitations"/>
      </ecosystem>
      <ecosystem name="node">
        <package name="react" version="18.2.0" purpose="Frontend UI framework"/>
        <package name="react-hook-form" version="7.48.2" purpose="Form handling for invitation forms"/>
        <package name="axios" version="1.6.2" purpose="HTTP client for invitation API calls"/>
        <package name="@radix-ui/react-dialog" version="1.0.5" purpose="Modal components for invitation forms"/>
      </ecosystem>
    </dependencies>
  </artifacts>

  <interfaces>
    <interface name="create_invitation_endpoint" kind="REST API" signature="POST /api/team/invitations" path="backend/modules/team/router.py">
      <description>Endpoint for creating team invitations with role assignment</description>
    </interface>
    <interface name="list_invitations_endpoint" kind="REST API" signature="GET /api/team/invitations" path="backend/modules/team/router.py">
      <description>Endpoint for listing pending invitations with status</description>
    </interface>
    <interface name="resend_invitation_endpoint" kind="REST API" signature="POST /api/team/invitations/{id}/resend" path="backend/modules/team/router.py">
      <description>Endpoint for resending invitations to pending users</description>
    </interface>
    <interface name="cancel_invitation_endpoint" kind="REST API" signature="DELETE /api/team/invitations/{id}" path="backend/modules/team/router.py">
      <description>Endpoint for cancelling pending invitations</description>
    </interface>
    <interface name="team_management_component" kind="React Component" signature="TeamManagement" path="frontend/src/features/team/components/TeamManagement.tsx">
      <description>Team management component for invitation creation and management</description>
    </interface>
    <interface name="invitation_list_component" kind="React Component" signature="InvitationList" path="frontend/src/features/team/components/InvitationList.tsx">
      <description>Invitation list component for displaying pending invitations</description>
    </interface>
  </interfaces>

  <constraints>
    <constraint type="rbac">Role-based Access Control: Only Company Admins can manage team invitations</constraint>
    <constraint type="security">Secure Token Generation: Cryptographically secure invitation tokens with 7-day expiration</constraint>
    <constraint type="security">Email-based Invitations: Secure invitation flow via email with company context</constraint>
    <constraint type="security">Multi-tenant Isolation: Invitations are company-specific and isolated</constraint>
    <constraint type="audit">Activity Logging: Comprehensive audit trail for invitation management</constraint>
    <constraint type="configuration">Configurable Limits: Invitation limits managed via Application Specification system</constraint>
    <constraint type="testing">Unit Tests: 80%+ coverage for team invitation module using pytest</constraint>
    <constraint type="testing">Integration Tests: Complete invitation flow using TestClient</constraint>
    <constraint type="testing">E2E Tests: Browser invitation management flow using Playwright</constraint>
  </constraints>

  <tests>
    <standards>
      Testing follows pytest framework for backend unit tests, React Testing Library for frontend component tests, and Playwright for E2E testing.
      Unit tests require 80%+ coverage for team invitation module. Integration tests cover complete invitation flow using FastAPI TestClient.
      E2E tests use Playwright for browser invitation management scenarios and role-based access control.
    </standards>
    <locations>
      <location>backend/tests/</location>
      <location>frontend/src/**/*.test.tsx</location>
      <location>tests/e2e/</location>
    </locations>
    <ideas>
      <test ac-id="AC-5.1" type="unit" description="Test invitation creation with role assignment"/>
      <test ac-id="AC-5.2" type="unit" description="Test email format validation and duplicate prevention"/>
      <test ac-id="AC-5.3" type="unit" description="Test secure invitation token generation with 7-day expiration"/>
      <test ac-id="AC-5.4" type="integration" description="Test invitation email sending with secure token link"/>
      <test ac-id="AC-5.5" type="unit" description="Test role assignment validation for invitations"/>
      <test ac-id="AC-5.6" type="integration" description="Test pending invitations display with status and expiration"/>
      <test ac-id="AC-5.7" type="unit" description="Test invitation resending functionality"/>
      <test ac-id="AC-5.8" type="unit" description="Test invitation cancellation functionality"/>
      <test ac-id="AC-5.9" type="unit" description="Test invitation activity logging"/>
      <test ac-id="AC-5.10" type="unit" description="Test invitation limits enforcement"/>
      <test ac-id="AC-5.11" type="e2e" description="Test browser invitation management with company branding"/>
    </ideas>
  </tests>
</story-context>
